'use strict';

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//
//               _____/\\\\\\\\\\\____/\\\\\\\\\\\\\\\_____/\\\\\\\\\_____/\\\\\\\\\\\\\\\__/\\\________/\\\_____/\\\\\\\\\\\___
//                ___/\\\/////////\\\_\///////\\\/////____/\\\\\\\\\\\\\__\///////\\\/////__\/\\\_______\/\\\___/\\\/////////\\\_
//                 __\//\\\______\///________\/\\\________/\\\/////////\\\_______\/\\\_______\/\\\_______\/\\\__\//\\\______\///__
//                  ___\////\\\_______________\/\\\_______\/\\\_______\/\\\_______\/\\\_______\/\\\_______\/\\\___\////\\\_________
//                   ______\////\\\____________\/\\\_______\/\\\\\\\\\\\\\\\_______\/\\\_______\/\\\_______\/\\\______\////\\\______
//                    _________\////\\\_________\/\\\_______\/\\\/////////\\\_______\/\\\_______\/\\\_______\/\\\_________\////\\\___
//                     __/\\\______\//\\\________\/\\\_______\/\\\_______\/\\\_______\/\\\_______\//\\\______/\\\___/\\\______\//\\\__
//                      _\///\\\\\\\\\\\/_________\/\\\_______\/\\\_______\/\\\_______\/\\\________\///\\\\\\\\\/___\///\\\\\\\\\\\/___
//                       ___\///////////___________\///________\///________\///________\///___________\/////////_______\///////////_____
//                                                                       Created by Dominik Wilkowski
// @desc     Status, a network status tool in three acts
// @author   Dominik Wilkowski
// @website  https://github.com/dominikwilkowski/status
// @issues   https://github.com/dominikwilkowski/status/issues
//--------------------------------------------------------------------------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// External dependencies
//--------------------------------------------------------------------------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// Custom functions
//--------------------------------------------------------------------------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// Settings
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
var SETTINGS = function() {
	return {
		folder: {
			poller: 'poller/',
			server: 'server/',
			page: 'page/',
			dev: '_dev/',
			prod: '_prod/',
		},
		file: {
			poller: 'poller.js',
			server: 'server.js',
			page: 'page.js',
			Packagejson: 'package.json',
		},
		replace: {
			dev: [
				{ from: '[debugcomment]', to: '' },
				{ from: '[prodcomment]', to: '// ' },
				{ from: '[Debug]', to: 'true' },
				{ from: '[-Debug-]', to: '[Debug]' },
				{ from: '[Name-Version]', to: '<%= pkg.name %> - v<%= pkg.version %>' },
				{ from: '[Version]', to: 'v<%= pkg.version %>' },
			],
			prod: [
				{ from: '[debugcomment]', to: '// ' },
				{ from: '[prodcomment]', to: '' },
				{ from: '[Debug]', to: 'false' },
				{ from: '[-Debug-]', to: '[Debug]' },
				{ from: '[Name-Version]', to: '<%= pkg.name %> - v<%= pkg.version %>' },
				{ from: '[Version]', to: 'v<%= pkg.version %>' },
			],
		},
	};
};


//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// Grunt module
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
module.exports = function(grunt) {

	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Dependencies
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	grunt.loadNpmTasks('grunt-contrib-concat');
	grunt.loadNpmTasks('grunt-contrib-watch');
	grunt.loadNpmTasks('grunt-text-replace');
	grunt.loadNpmTasks('grunt-wakeup');
	grunt.loadNpmTasks('grunt-font');
	require('time-grunt')(grunt);


	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Grunt tasks
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	grunt.initConfig({


		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Package content
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		SETTINGS: SETTINGS(),
		pkg: grunt.file.readJSON( SETTINGS().file.Packagejson ),


		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Replace version
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		replace: {
			pollerDev: {
				src: [
					'<%= SETTINGS.folder.dev %><%= SETTINGS.file.poller %>',
				],
				overwrite: true,
				replacements: SETTINGS().replace.dev,
			},
			pollerProd: {
				src: [
					'<%= SETTINGS.folder.prod %><%= SETTINGS.file.poller %>',
				],
				overwrite: true,
				replacements: SETTINGS().replace.prod,
			},

			serverDev: {
				src: [
					'<%= SETTINGS.folder.dev %><%= SETTINGS.file.server %>',
				],
				overwrite: true,
				replacements: SETTINGS().replace.dev,
			},
			serverProd: {
				src: [
					'<%= SETTINGS.folder.prod %><%= SETTINGS.file.server %>',
				],
				overwrite: true,
				replacements: SETTINGS().replace.prod,
			},

			pageDev: {
				src: [
					'<%= SETTINGS.folder.dev %><%= SETTINGS.file.page %>',
				],
				overwrite: true,
				replacements: SETTINGS().replace.dev,
			},

			pageProd: {
				src: [
					'<%= SETTINGS.folder.prod %><%= SETTINGS.file.page %>',
				],
				overwrite: true,
				replacements: SETTINGS().replace.prod,
			},
		},


		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Concat files
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		concat: {
			pollerDev: {
				src: [
					'<%= SETTINGS.folder.poller %>/*.js',
				],
				dest: '<%= SETTINGS.folder.dev %><%= SETTINGS.file.poller %>',
			},
			pollerProd: {
				src: [
					'<%= SETTINGS.folder.poller %>/*.js',
				],
				dest: '<%= SETTINGS.folder.prod %><%= SETTINGS.file.poller %>',
			},

			serverDev: {
				src: [
					'<%= SETTINGS.folder.server %>/*.js',
				],
				dest: '<%= SETTINGS.folder.dev %><%= SETTINGS.file.server %>',
			},
			serverProd: {
				src: [
					'<%= SETTINGS.folder.server %>/*.js',
				],
				dest: '<%= SETTINGS.folder.prod %><%= SETTINGS.file.server %>',
			},

			pageDev: {
				src: [
					'<%= SETTINGS.folder.page %>/*.js',
				],
				dest: '<%= SETTINGS.folder.dev %><%= SETTINGS.file.page %>',
			},
			pageProd: {
				src: [
					'<%= SETTINGS.folder.page %>/*.js',
				],
				dest: '<%= SETTINGS.folder.prod %><%= SETTINGS.file.page %>',
			},
		},


		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Banners
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		font: {
			options: {
				space: false,
				align: 'center',
				colors: ['blue', 'gray'],
			},

			title: {
				text: '|status',
			},
		},


		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Wakeup
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		wakeup: {
			wakeme: {
				options: {
					randomize: true,
					notifications: true,
				},
			},
		},


		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Watch
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		watch: {
			poller: {
				files: [
					'<%= SETTINGS.folder.poller %>/*.js',
				],
				tasks: [
					'_buildPoller',
					'wakeup',
				],
			},

			server: {
				files: [
					'<%= SETTINGS.folder.server %>/*.js',
				],
				tasks: [
					'_buildServer',
					'wakeup',
				],
			},

			page: {
				files: [
					'<%= SETTINGS.folder.page %>/*.js',
				],
				tasks: [
					'_buildPage',
					'wakeup',
				],
			},
		},

	});



	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Private tasks
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	grunt.registerTask('_buildPoller', [
		'concat:pollerDev',
		'concat:pollerProd',
		'replace:pollerDev',
		'replace:pollerProd',
	]);

	grunt.registerTask('_buildServer', [
		'concat:serverDev',
		'concat:serverProd',
		'replace:serverDev',
		'replace:serverProd',
	]);

	grunt.registerTask('_buildPage', [
		'concat:pageDev',
		'concat:pageProd',
		'replace:pageDev',
		'replace:pageProd',
	]);


	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Build tasks
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	grunt.registerTask('default', [ //run build with watch
		'font:title',
		'_buildPoller',
		'_buildServer',
		'_buildPage',
		'wakeup',
		'watch',
	]);

};